<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Chris Ried Blog</title>
    <link>/tags/r/</link>
    <description>Recent content in R on Chris Ried Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/r/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Variable Importance in R</title>
      <link>/2017/10/04/variable-importance-in-r/</link>
      <pubDate>Wed, 04 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/10/04/variable-importance-in-r/</guid>
      <description>In progress  </description>
    </item>
    
    <item>
      <title>AB Testing in R from Scratch</title>
      <link>/2017/09/29/ab-testing-in-r-from-scratch/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/09/29/ab-testing-in-r-from-scratch/</guid>
      <description>In Progress Using Bayesian Systems  Quantify the probability of all possibilites thus measuring risk insert institutional knowledge (add knowledge that changes the probability) learn in an online fashion   A/B Testing with Approximate Bayesian Computation  No mathematics required able to implement from scratch   A/B Testing Measures and figures out the better design
Approximate Bayesian Computation
 Generate a trial value for the thing we want to know (in this case its the conversion fraction of a layout) Simulate or data assuming the trail value, keep the trial value, otherwise discard it and try again If the simulation looks like the real data, keep the trial value, otherwise discard and try again Keep doing this until weâ€™ve got lots of trial values that worked  library(progress) library(ggplot2) library(reshape2) # Variables n_visitors_a &amp;lt;- 100 # number of visitors shown layout A n_conv_a &amp;lt;- 4 # number of vistors shown layout A who converted (4%) n_visitors_b &amp;lt;- 40 n_conv_b &amp;lt;- 2 Using Bayesian Systems</description>
    </item>
    
    <item>
      <title>Installing RStudio Server on Google Cloud </title>
      <link>/2017/09/29/installing-rstudio-server-on-google-cloud/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/09/29/installing-rstudio-server-on-google-cloud/</guid>
      <description>In progress  </description>
    </item>
    
    <item>
      <title>Tips on Creating Effective and Functional Documentation in R</title>
      <link>/2017/09/22/tips-creating-functional-documention/</link>
      <pubDate>Fri, 22 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/09/22/tips-creating-functional-documention/</guid>
      <description>Just like any skill, there is a learning curve involved in creating effective communication. This involves the code written and the documentation of its usage. Writing functional code is a intricate thing to accomplish as a newbie. It takes time to know what is efficient and how to communicate it as such. Now, writing functional documentation is more complicated as there is a delicate balance between not reguritate what the code says, and giving usable pointers to the users on how a particular function was intended to be used.</description>
    </item>
    
    <item>
      <title>Tracking Change Improvements in Retail </title>
      <link>/2017/09/21/tracking-change-improvements-in-retail/</link>
      <pubDate>Thu, 21 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/09/21/tracking-change-improvements-in-retail/</guid>
      <description>In the ever changing world of retail; one always has to keep one step ahead of the competition and to engage with its customers. One of the best ways
 Formulate a test Implement Test Evaluate results Adjust the test Try again.  These are all great ideas, but how do we truly watch tas things get better?
library(qcc) ## Package &amp;#39;qcc&amp;#39; version 2.7 ## Type &amp;#39;citation(&amp;quot;qcc&amp;quot;)&amp;#39; for citing this R package in publications.</description>
    </item>
    
    <item>
      <title>Formatting Currencies in R</title>
      <link>/2017/06/03/formatting-currencies-in-r/</link>
      <pubDate>Sat, 03 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/06/03/formatting-currencies-in-r/</guid>
      <description>here are a few different ways to format numbers in R. A few of theme can be accomplished using the paste function in R. I&amp;rsquo;ve found that there are a few different methods to do this.
Using the scales package Using the scales packages from Hadley, there is a great function with various options including passing a vector.
	library(scales) dollar_format()(c(-100, 0.23, 1.456565, 2e3))  Formatting currency with separator Following is a simple function one can build and place in their utility function that will give formatted currency.</description>
    </item>
    
    <item>
      <title>Phillips Hue in R </title>
      <link>/2017/06/03/phillips-hue-in-r/</link>
      <pubDate>Sat, 03 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/06/03/phillips-hue-in-r/</guid>
      <description>The following function can be used to find and display the internal IP address needed to retrieve the IP address from Hue Bridge. You will need to generate an API key i.e. a &amp;ldquo;userkey&amp;rdquo; as I called it below.
getIP &amp;lt;- function() { url &amp;lt;- paste0(&amp;quot;https://www.meethue.com/api/nupnp&amp;quot;) res &amp;lt;- httpGET(url) resJson &amp;lt;- fromJSON(res) res &amp;lt;- resJson[[&amp;quot;internalipaddress&amp;quot;]] res }  In order to know what light you should change the state on, one can run the following to retrieve the available lights connected on the network.</description>
    </item>
    
  </channel>
</rss>