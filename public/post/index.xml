<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on CBayes</title>
    <link>/post/</link>
    <description>Recent content in Posts on CBayes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 21 Aug 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Formatting Currencies in R</title>
      <link>/2018/08/21/formatting-currencies-in-r/</link>
      <pubDate>Tue, 21 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/08/21/formatting-currencies-in-r/</guid>
      <description>Here are a few different ways to format numbers in R. A few of theme can be accomplished using the paste function in R. I’ve found that there are a few different methods to do this.
Using the scales package Using the scales packages from Hadley, there is a great function with various options including passing a vector.
 library(scales) dollar_format()(c(-100, 0.23, 1.456565, 2e3)) ## [1] &amp;quot;-$100.00&amp;quot; &amp;quot;$0.23&amp;quot; &amp;quot;$1.46&amp;quot; &amp;quot;$2,000.</description>
    </item>
    
    <item>
      <title>How to bend the data</title>
      <link>/2018/08/09/how-to-bend-the-data/</link>
      <pubDate>Thu, 09 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/08/09/how-to-bend-the-data/</guid>
      <description>One of the fundamental priorities of a data scientist is being able to bend the data into a format that is plyable. Being able to effectively use tidyr, reshape2 and the core functions are key to success in being able to manage a large dataset without swimming or drowning in it.
But it does take discipline and instinct to understand the validity of the data so lets exercise this a little:</description>
    </item>
    
    <item>
      <title>Phillips Hue in R</title>
      <link>/2018/08/07/phillips-hue-in-r/</link>
      <pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/08/07/phillips-hue-in-r/</guid>
      <description>The following function can be used to find and display the internal IP address needed to retrieve the IP address from Hue Bridge. You will need to generate an API key i.e. a “userkey” as I called it below.
getIP &amp;lt;- function() { url &amp;lt;- paste0(&amp;quot;https://www.meethue.com/api/nupnp&amp;quot;) res &amp;lt;- httpGET(url) resJson &amp;lt;- fromJSON(res) res &amp;lt;- resJson[[&amp;quot;internalipaddress&amp;quot;]] res }  In order to know what light you should change the state on, one can run the following to retrieve the available lights connected on the network.</description>
    </item>
    
    <item>
      <title>Simulate Doctor Visit Resource Planning Using Simmer</title>
      <link>/2018/08/07/simulate-resource-planning-using-simmer/</link>
      <pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/08/07/simulate-resource-planning-using-simmer/</guid>
      <description>Following code tries to resource plan certain doctor visits based on the vignette that was provided with the simmer package.
library(simmer) ## Warning: package &amp;#39;simmer&amp;#39; was built under R version 3.6.2 set.seed(42) env &amp;lt;- simmer(&amp;quot;SuperDuperSim&amp;quot;) env ## simmer environment: SuperDuperSim | now: 0 | next: ## { Monitor: in memory } patient &amp;lt;- trajectory(&amp;quot;patients&amp;#39; path&amp;quot;) %&amp;gt;% ## add an intake activity seize(&amp;quot;nurse&amp;quot;, 1) %&amp;gt;% timeout(function() rnorm(1, 15)) %&amp;gt;% release(&amp;quot;nurse&amp;quot;, 1) %&amp;gt;% ## add a consultation activity seize(&amp;quot;doctor&amp;quot;, 1) %&amp;gt;% timeout(function() rnorm(1, 20)) %&amp;gt;% release(&amp;quot;doctor&amp;quot;, 1) %&amp;gt;% ## add a planning activity seize(&amp;quot;administration&amp;quot;, 1) %&amp;gt;% timeout(function() rnorm(1, 5)) %&amp;gt;% release(&amp;quot;administration&amp;quot;, 1) env %&amp;gt;% add_resource(&amp;quot;nurse&amp;quot;, 1) %&amp;gt;% add_resource(&amp;quot;doctor&amp;quot;, 2) %&amp;gt;% add_resource(&amp;quot;administration&amp;quot;, 1) %&amp;gt;% add_generator(&amp;quot;patient&amp;quot;, patient, function() rnorm(1, 10, 2)) ## simmer environment: SuperDuperSim | now: 0 | next: 0 ## { Monitor: in memory } ## { Resource: nurse | monitored: TRUE | server status: 0(1) | queue status: 0(Inf) } ## { Resource: doctor | monitored: TRUE | server status: 0(2) | queue status: 0(Inf) } ## { Resource: administration | monitored: TRUE | server status: 0(1) | queue status: 0(Inf) } ## { Source: patient | monitored: 1 | n_generated: 0 } env %&amp;gt;% run(80) %&amp;gt;% now() ## [1] 80 env %&amp;gt;% peek(3) ## [1] 80.</description>
    </item>
    
    <item>
      <title>Take Back Your Time (Evernote)</title>
      <link>/2018/08/07/take-back-your-time-evernote/</link>
      <pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/08/07/take-back-your-time-evernote/</guid>
      <description>You will find the following text originally posted on Medium</description>
    </item>
    
    <item>
      <title>Time and Difficulty</title>
      <link>/2018/08/07/time-and-difficulty/</link>
      <pubDate>Tue, 07 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/08/07/time-and-difficulty/</guid>
      <description>Sometimes, seeing data in a 3 dimensional space gives us better visibility to the rest of the world. You will see that we have taken a hypothetical experiment and tried to rate different ideas by their complexity and likelihood to succeed.
#Libraries to import library(tidyverse) ## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.2 ## Warning: package &amp;#39;purrr&amp;#39; was built under R version 3.</description>
    </item>
    
    <item>
      <title>Minature Generative Art </title>
      <link>/2018/01/08/minature-generative-art/</link>
      <pubDate>Mon, 08 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/01/08/minature-generative-art/</guid>
      <description>Sometimes something simple can turn out to generate the most beautiful things. Following you will find a few lines of code that present a beautiful pattern.
Oval Curve  n &amp;lt;- 300 t1 &amp;lt;- 1:n t0 &amp;lt;- seq(3,2*n+1,2) %% n t2 &amp;lt;- t0 + (t0 == 0)*n df &amp;lt;- data.frame(x = cos((t1-1)*2*pi/n), y = sin((t1-1)*2*pi/n), x2 = cos((t2-1)*2*pi/n), y2 = sin((t2-1)*2*pi/n)) ggplot(df,aes(x,y,xend = x2,yend = y2)) + geom_segment(alpha = .</description>
    </item>
    
    <item>
      <title>Extracting Hyperlinks from an XSLX in R</title>
      <link>/2018/01/04/extracting-hyperlinks-from-an-xslx-in-r/</link>
      <pubDate>Thu, 04 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/2018/01/04/extracting-hyperlinks-from-an-xslx-in-r/</guid>
      <description> In Progress install.packages(“keras”) library(keras)
devtools::install_github(“omarwagih/ggseqlogo”) devtools::install_github(“leonjessen/PepTools”)
 </description>
    </item>
    
    <item>
      <title>Human Ingenuity and Speed</title>
      <link>/2017/12/23/human-ingenuity-and-speed/</link>
      <pubDate>Sat, 23 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/12/23/human-ingenuity-and-speed/</guid>
      <description>library(tidyverse) ## ── Attaching packages ─────────────────────────────── tidyverse 1.3.0 ── ## ✓ ggplot2 3.3.0 ✓ purrr 0.3.4 ## ✓ tibble 3.0.1 ✓ dplyr 0.8.5 ## ✓ tidyr 1.0.2 ✓ stringr 1.4.0 ## ✓ readr 1.3.1 ✓ forcats 0.5.0 ## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.2 ## Warning: package &amp;#39;purrr&amp;#39; was built under R version 3.6.2 ## ── Conflicts ────────────────────────────────── tidyverse_conflicts() ── ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() Data Building The first thing we need to understand is where we have come and where we are going.</description>
    </item>
    
    <item>
      <title>Words With Friends Musings</title>
      <link>/2017/12/03/words-with-friends-musings/</link>
      <pubDate>Sun, 03 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/12/03/words-with-friends-musings/</guid>
      <description> #library(tidyverse) # IMport Data #filepath &amp;lt;- &amp;quot;~/Dropbox/Word Lists/WordsWithFriends/enable1-wwf-v4.0-wordlist.txt&amp;quot; #wwfList &amp;lt;- read_csv(filepath, col_names = FALSE) #wwfList %&amp;gt;% stringr::str(&amp;#39;.ae.&amp;#39;) </description>
    </item>
    
    <item>
      <title>Exploring the Book of Esther in the Tidy Verse</title>
      <link>/2017/11/30/exploring-the-book-of-esther-in-the-tidy-verse/</link>
      <pubDate>Thu, 30 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/11/30/exploring-the-book-of-esther-in-the-tidy-verse/</guid>
      <description>library(httr) library(tidytext) ## Warning: package &amp;#39;tidytext&amp;#39; was built under R version 3.6.2 library(jsonlite) library(tidyverse) ## ── Attaching packages ─────────────────────────────── tidyverse 1.3.0 ── ## ✓ ggplot2 3.3.0 ✓ purrr 0.3.4 ## ✓ tibble 3.0.1 ✓ dplyr 0.8.5 ## ✓ tidyr 1.0.2 ✓ stringr 1.4.0 ## ✓ readr 1.3.1 ✓ forcats 0.5.0 ## Warning: package &amp;#39;tibble&amp;#39; was built under R version 3.6.2 ## Warning: package &amp;#39;purrr&amp;#39; was built under R version 3.</description>
    </item>
    
    <item>
      <title>Word With Friends Sidekick in R </title>
      <link>/2017/11/30/word-with-friends-sidekick-in-r/</link>
      <pubDate>Thu, 30 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/11/30/word-with-friends-sidekick-in-r/</guid>
      <description>The following post is discovering what else I can do with words. One thing that I have recently picked up is playing Scrabble or (5_2_2)</description>
    </item>
    
    <item>
      <title>Timeseries Analysis Using R and Advantager</title>
      <link>/2017/11/11/timeseries-analysis-using-r-and-advantager/</link>
      <pubDate>Sat, 11 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/11/11/timeseries-analysis-using-r-and-advantager/</guid>
      <description>Threw error due to the API In the past, the best way to get stock prices was to use either Google Finance or Yahoo Finance data streams. These have since become difficult to keep up to date and thus another outlet to get this information is AlphaVantager. Following is a simple R implementation to get up to date data. You will be able to thus use this to find the information.</description>
    </item>
    
    <item>
      <title>Text Generation</title>
      <link>/2017/11/03/text-generation/</link>
      <pubDate>Fri, 03 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/11/03/text-generation/</guid>
      <description>IN PROGRESS Text Generation (Generative Texr) is a very interesting field of study. There are a number of different packages that help generate the lists of words to give the user a better understanding of the technology.
 Tracery  The following Node library gives a structure which is used to generate random words that are assigned to lexical structure that is defined by the user.
 centar : { animal : [&amp;quot;wolf&amp;quot;,&amp;quot;bear&amp;quot;,&amp;quot;tiger&amp;quot;,&amp;quot;lion&amp;quot;,&amp;quot;snake&amp;quot;,&amp;quot;anteater&amp;quot;], fruit : [&amp;quot;banana&amp;quot;,&amp;quot;tomato&amp;quot;,&amp;quot;cherry&amp;quot;,&amp;quot;strawberry&amp;quot;,&amp;quot;starfruit&amp;quot;], said : [&amp;quot;purring&amp;quot;, &amp;quot;whispering&amp;quot;, &amp;quot;saying&amp;quot;, &amp;quot;murmurring&amp;quot;, &amp;quot;growling&amp;quot;], timeofday : [&amp;quot;morning&amp;quot;,&amp;quot;evening&amp;quot;,&amp;quot;dusk&amp;quot;,&amp;quot;dawn&amp;quot;,&amp;quot;afternoon&amp;quot;,&amp;quot;breakfast&amp;quot;,&amp;quot;breakfast&amp;quot;], lastSyl : &amp;quot;a ia ea u y en am is on an o io i el ios ax ox ix ex izz ius ian ean ekang anth&amp;quot;.</description>
    </item>
    
    <item>
      <title>Gantt Charts in R</title>
      <link>/2017/10/17/gantt-charts-in-r/</link>
      <pubDate>Tue, 17 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/10/17/gantt-charts-in-r/</guid>
      <description>In Progress Using timevis library(timevis) data &amp;lt;- data.frame( id = 1:4, content = c(&amp;quot;Item one&amp;quot; , &amp;quot;Item two&amp;quot; ,&amp;quot;Ranged item&amp;quot;, &amp;quot;Item four&amp;quot;), start = c(&amp;quot;2016-01-10&amp;quot;, &amp;quot;2016-01-11&amp;quot;, &amp;quot;2016-01-20&amp;quot;, &amp;quot;2016-02-14 15:00:00&amp;quot;), end = c(NA , NA, &amp;quot;2016-02-04&amp;quot;, NA) ) timevis(data) + -   {&#34;x&#34;:{&#34;items&#34;:[{&#34;id&#34;:&#34;1&#34;,&#34;content&#34;:&#34;Item one&#34;,&#34;start&#34;:&#34;2016-01-10&#34;},{&#34;id&#34;:&#34;2&#34;,&#34;content&#34;:&#34;Item two&#34;,&#34;start&#34;:&#34;2016-01-11&#34;},{&#34;id&#34;:&#34;3&#34;,&#34;content&#34;:&#34;Ranged item&#34;,&#34;start&#34;:&#34;2016-01-20&#34;,&#34;end&#34;:&#34;2016-02-04&#34;},{&#34;id&#34;:&#34;4&#34;,&#34;content&#34;:&#34;Item four&#34;,&#34;start&#34;:&#34;2016-02-14 15:00:00&#34;}],&#34;groups&#34;:null,&#34;showZoom&#34;:true,&#34;zoomFactor&#34;:0.5,&#34;fit&#34;:true,&#34;options&#34;:[],&#34;height&#34;:null,&#34;api&#34;:[]},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}  Using DiagrammerR library(tidyr) library(dplyr) ## ## Attaching package: &amp;#39;dplyr&amp;#39; ## The following objects are masked from &amp;#39;package:stats&amp;#39;: ## ## filter, lag ## The following objects are masked from &amp;#39;package:base&amp;#39;: ## ## intersect, setdiff, setequal, union library(DiagrammeR) mermaid(&amp;quot; gantt dateFormat YYYY-MM-DD title A Very Nice Gantt Diagram section Basic Tasks This is completed :done, first_1, 2014-01-06, 2014-01-08 This is active :active, first_2, 2014-01-09, 3d Do this later : first_3, after first_2, 5d Do this after that : first_4, after first_3, 5d section Important Things Completed, critical task :crit, done, import_1, 2014-01-06,24h Also done, also critical :crit, done, import_2, after import_1, 2d Doing this important task now :crit, active, import_3, after import_2, 3d Next critical task :crit, import_4, after import_3, 5d section The Extras First extras :active, extras_1, after import_4, 3d Second helping : extras_2, after extras_1, 20h More of the extras : extras_3, after extras_1, 48h &amp;quot;)  {&#34;</description>
    </item>
    
    <item>
      <title>The Beginnings of Bayesian Philosophy</title>
      <link>/2017/10/13/the-beginnings-of-bayesian-philosophy/</link>
      <pubDate>Fri, 13 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/10/13/the-beginnings-of-bayesian-philosophy/</guid>
      <description>In this necessary subject one must appeal to oneself’s own intuition about the relationships it has with the other.</description>
    </item>
    
    <item>
      <title>Tips on Feature Engineering</title>
      <link>/2017/10/08/tips-on-feature-engineering/</link>
      <pubDate>Sun, 08 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/10/08/tips-on-feature-engineering/</guid>
      <description> Tips on Feature Engineering  to fit how classifiers work; giving a geometry problem to a tree, oversized dimension to a kNN and interval data to an SVM are not a good ideas remove as much nonlinearities as possible; expecting that some classifier will do Fourier analysis inside is rather naive (even if, it will waste a lot of complexity there) make features generic to all objects so that some sampling in the chain won’t knock them out check previous works – often transformation used for visualisation or testing similar types of data is already tuned to uncover interesting aspects avoid unstable, optimizing transformations like PCA which may lead to overfitting experiment a lot   </description>
    </item>
    
    <item>
      <title>Great Statistics Books to Read</title>
      <link>/2017/10/06/great-statistics-books-to-read/</link>
      <pubDate>Fri, 06 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/10/06/great-statistics-books-to-read/</guid>
      <description> Following you will find a number of the best books to learn more about statistics and its philosophy.
 Opinionated Lessons on Statistics Introduction to Statistical Learning The Elements of Statistical Learning Applied Predicitive Modeling Statistical Inference Statistical Rethinking Data Analysis Using Regression and Multilevel/Hierarchical Models Mostly Harmless Econometrics Mastering Metrics: The Path from Cause to Effect All of Statistics Statistics Statistics for Experimenters Think Bayes Computer Age Statistical Inference Think Stats Machine Learning for Hackers Probability and Statistics Statistical Evidence: A likelihood paradigm  </description>
    </item>
    
    <item>
      <title>Machine Learning Organization</title>
      <link>/2017/10/05/machine-learning-organization/</link>
      <pubDate>Thu, 05 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/10/05/machine-learning-organization/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Variable Importance in R</title>
      <link>/2017/10/04/variable-importance-in-r/</link>
      <pubDate>Wed, 04 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/10/04/variable-importance-in-r/</guid>
      <description> In progress  </description>
    </item>
    
    <item>
      <title>Mapping Functions in R Base</title>
      <link>/2017/10/03/mapping-functions-in-r-base/</link>
      <pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/10/03/mapping-functions-in-r-base/</guid>
      <description> The following functions are given:
 Reduce(f, x, init, right = FALSE, accumulate = FALSE) Filter(f, x) Find(f, x, right = FALSE, nomatch = NULL) Map(f, …) Negate(f) Position(f, x, right = FALSE, nomatch = NA_integer_)  x &amp;lt;- c(1,2,3) add &amp;lt;- function(x) {x+2} Map(add, x) ## [[1]] ## [1] 3 ## ## [[2]] ## [1] 4 ## ## [[3]] ## [1] 5 Reduce(&amp;quot;+&amp;quot;,x,accumulate = TRUE) ## [1] 1 3 6 x &amp;lt;- NULL missing(x) ## [1] FALSE # Now its missing a formal argument t &amp;lt;- function(x, y) { if(xd) { y &amp;lt;- x } x+y } t2 &amp;lt;- function(x, y) { x+y } isTRUE(TRUE) ## [1] TRUE a &amp;lt;- c(2,2,3) b &amp;lt;- c(1,4,2) a %in% b  ## [1] TRUE TRUE FALSE 1 %in% b  ## [1] TRUE </description>
    </item>
    
    <item>
      <title>AB Testing in R from Scratch</title>
      <link>/2017/09/29/ab-testing-in-r-from-scratch/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/09/29/ab-testing-in-r-from-scratch/</guid>
      <description>Using Bayesian Systems  Quantify the probability of all possibilites thus measuring risk insert institutional knowledge (add knowledge that changes the probability) learn in an online fashion   A/B Testing with Approximate Bayesian Computation  No mathematics required able to implement from scratch   A/B Testing Measures and figures out the better design
Approximate Bayesian Computation
 Generate a trial value for the thing we want to know (in this case its the conversion fraction of a layout) Simulate or data assuming the trail value, keep the trial value, otherwise discard it and try again If the simulation looks like the real data, keep the trial value, otherwise discard and try again Keep doing this until we’ve got lots of trial values that worked  library(progress) library(ggplot2) library(reshape2) ## Warning: package &amp;#39;reshape2&amp;#39; was built under R version 3.</description>
    </item>
    
    <item>
      <title>Installing RStudio Server on Google Cloud </title>
      <link>/2017/09/29/installing-rstudio-server-on-google-cloud/</link>
      <pubDate>Fri, 29 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/09/29/installing-rstudio-server-on-google-cloud/</guid>
      <description> #In progress
Still in progress  </description>
    </item>
    
    <item>
      <title>Tips on Creating Effective and Functional Documentation in R</title>
      <link>/2017/09/22/tips-creating-functional-documention/</link>
      <pubDate>Fri, 22 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/09/22/tips-creating-functional-documention/</guid>
      <description>Just like any skill, there is a learning curve involved in creating effective communication. This involves the code written and the documentation of its usage. Writing functional code is a intricate thing to accomplish as a newbie. It takes time to know what is efficient and how to communicate it as such. Now, writing functional documentation is more complicated as there is a delicate balance between not reguritate what the code says, and giving usable pointers to the users on how a particular function was intended to be used.</description>
    </item>
    
    <item>
      <title>Tracking Change Improvements in Retail</title>
      <link>/2017/09/21/tracking-change-improvements-in-retail/</link>
      <pubDate>Thu, 21 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/09/21/tracking-change-improvements-in-retail/</guid>
      <description>In the ever changing world of retail; one always has to keep one step ahead of the competition and to engage with its customers. One of the best ways
 Formulate a test Implement Test Evaluate results Adjust the test Try again.  These are all great ideas, but how do we truly watch tas things get better?
library(qcc) ## Package &amp;#39;qcc&amp;#39; version 2.7 ## Type &amp;#39;citation(&amp;quot;qcc&amp;quot;)&amp;#39; for citing this R package in publications.</description>
    </item>
    
    <item>
      <title>5 Tips to SQL Script Writing Success</title>
      <link>/2017/09/20/5-tips-to-sql-script-writing-success/</link>
      <pubDate>Wed, 20 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/09/20/5-tips-to-sql-script-writing-success/</guid>
      <description>The longer I’ve worked in software development, the more I have to stress the importance of developing a methodology of naming, version control, and organizing all the various scripts that have been written.
Following are a couple tips of advice I’ve collected over the last five years. I’ve found them to be crucial to implement and habitualize best practices that are similar to these. It will save you time and also will make you more efficient.</description>
    </item>
    
    <item>
      <title>Adding a Plumber API to Connect</title>
      <link>/2017/09/17/adding-an-plumber-api-to-connect/</link>
      <pubDate>Sun, 17 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/09/17/adding-an-plumber-api-to-connect/</guid>
      <description> Creating a Plumber.R file  </description>
    </item>
    
    <item>
      <title>Setting Up R-Connect using Digital Ocean</title>
      <link>/2017/09/15/setting-up-r-connect-using-digital-ocean/</link>
      <pubDate>Fri, 15 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/09/15/setting-up-r-connect-using-digital-ocean/</guid>
      <description>Sign up to R-Studio’s free 45 day trial so that you have the install. This will give you the ability to install right straight from their site. I went to Digital Ocean for this use case. Generally you will want to add this either to a local server on your network, or you can add it to a cloud provider. This can be whatever you are most comfortable.
Setup a Droplet image I created a Ubuntu 16.</description>
    </item>
    
    <item>
      <title>Rocket Propulsion Ch 1</title>
      <link>/2017/06/05/rocket-propolsion-ch-1/</link>
      <pubDate>Mon, 05 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/06/05/rocket-propolsion-ch-1/</guid>
      <description>Accelerating force
\[ F=mv_e \] thrust of the rocket is expressed in terms of the mass flow rate  m and the efficient exhaust velocity \(v_e\)
\[ V = V_e\log_e\frac{M_0}{M} \] \(M_0\) - mass of the rocket at ignition \(M\) - Current mass of the rocket
mass ratio \[ R = \frac{M_0}{M} \]
RocketEquationGraph &amp;lt;- data.frame(Mass.Ratio = c(seq(1:20))) RocketEquationGraph &amp;lt;- RocketEquationGraph %&amp;gt;% mutate( M4000 = RocketEquation(Mass.Ratio, 4000),M3000 = RocketEquation(Mass.Ratio, 3000),M2000 = RocketEquation(Mass.</description>
    </item>
    
  </channel>
</rss>